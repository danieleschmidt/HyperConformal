apiVersion: apps/v1
kind: Deployment
metadata:
  name: hyperconformal-app
  namespace: hyperconformal
  labels:
    app: hyperconformal
    component: main
    version: v1.0.0
spec:
  replicas: 3
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  selector:
    matchLabels:
      app: hyperconformal
      component: main
  template:
    metadata:
      labels:
        app: hyperconformal
        component: main
        version: v1.0.0
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "8081"
        prometheus.io/path: "/metrics"
    spec:
      serviceAccountName: hyperconformal-sa
      securityContext:
        runAsNonRoot: true
        runAsUser: 1001
        runAsGroup: 1001
        fsGroup: 1001
      containers:
      - name: hyperconformal
        image: hyperconformal:latest
        imagePullPolicy: Always
        ports:
        - name: http
          containerPort: 8080
          protocol: TCP
        - name: metrics
          containerPort: 8081
          protocol: TCP
        env:
        - name: HYPERCONFORMAL_MODE
          value: "production"
        - name: HYPERCONFORMAL_WORKERS
          valueFrom:
            configMapKeyRef:
              name: hyperconformal-config
              key: workers
        - name: HYPERCONFORMAL_LOG_LEVEL
          valueFrom:
            configMapKeyRef:
              name: hyperconformal-config
              key: log_level
        - name: REDIS_URL
          valueFrom:
            secretKeyRef:
              name: hyperconformal-secrets
              key: redis_url
        - name: PROMETHEUS_PUSHGATEWAY
          valueFrom:
            configMapKeyRef:
              name: hyperconformal-config
              key: prometheus_pushgateway
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        resources:
          requests:
            memory: "2Gi"
            cpu: "1000m"
          limits:
            memory: "4Gi"
            cpu: "2000m"
        livenessProbe:
          httpGet:
            path: /health
            port: http
          initialDelaySeconds: 60
          periodSeconds: 30
          timeoutSeconds: 10
          successThreshold: 1
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /ready
            port: http
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          successThreshold: 1
          failureThreshold: 3
        volumeMounts:
        - name: model-storage
          mountPath: /app/models
          readOnly: false
        - name: log-storage
          mountPath: /app/logs
          readOnly: false
        - name: config-volume
          mountPath: /app/config
          readOnly: true
        - name: secrets-volume
          mountPath: /app/secrets
          readOnly: true
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 1001
          capabilities:
            drop:
            - ALL
      volumes:
      - name: model-storage
        persistentVolumeClaim:
          claimName: hyperconformal-models-pvc
      - name: log-storage
        emptyDir: {}
      - name: config-volume
        configMap:
          name: hyperconformal-config
      - name: secrets-volume
        secret:
          secretName: hyperconformal-secrets
      nodeSelector:
        kubernetes.io/arch: amd64
      tolerations:
      - key: "hyperconformal.io/dedicated"
        operator: "Equal"
        value: "true"
        effect: "NoSchedule"
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - hyperconformal
              topologyKey: kubernetes.io/hostname

---
apiVersion: v1
kind: Service
metadata:
  name: hyperconformal-service
  namespace: hyperconformal
  labels:
    app: hyperconformal
    component: main
  annotations:
    service.beta.kubernetes.io/aws-load-balancer-type: nlb
    service.beta.kubernetes.io/aws-load-balancer-cross-zone-load-balancing-enabled: "true"
spec:
  type: LoadBalancer
  sessionAffinity: ClientIP
  sessionAffinityConfig:
    clientIP:
      timeoutSeconds: 300
  ports:
  - name: http
    port: 80
    targetPort: http
    protocol: TCP
  - name: https
    port: 443
    targetPort: http
    protocol: TCP
  - name: metrics
    port: 8081
    targetPort: metrics
    protocol: TCP
  selector:
    app: hyperconformal
    component: main

---
apiVersion: v1
kind: Service
metadata:
  name: hyperconformal-internal
  namespace: hyperconformal
  labels:
    app: hyperconformal
    component: main
spec:
  type: ClusterIP
  ports:
  - name: http
    port: 8080
    targetPort: http
    protocol: TCP
  - name: metrics
    port: 8081
    targetPort: metrics
    protocol: TCP
  selector:
    app: hyperconformal
    component: main

---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: hyperconformal-hpa
  namespace: hyperconformal
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: hyperconformal-app
  minReplicas: 3
  maxReplicas: 20
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 80
  - type: Pods
    pods:
      metric:
        name: hyperconformal_requests_per_second
      target:
        type: AverageValue
        averageValue: "100"
  behavior:
    scaleDown:
      stabilizationWindowSeconds: 300
      policies:
      - type: Percent
        value: 10
        periodSeconds: 60
    scaleUp:
      stabilizationWindowSeconds: 60
      policies:
      - type: Percent
        value: 50
        periodSeconds: 60
      - type: Pods
        value: 2
        periodSeconds: 60

---
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: hyperconformal-pdb
  namespace: hyperconformal
spec:
  minAvailable: 2
  selector:
    matchLabels:
      app: hyperconformal
      component: main